var Rethink   = require('./');
var RethinkDB = require('./lib/rethink/adapters/rethinkdb');

// initialize
var r = new Rethink({ adapter: RethinkDB });

r.use(Rethink.Plugins.Populate);

// connect to database
r.connect('localhost:28015');

// define schema
var companySchema = r.schema({
  name:       r.types.string().required()
  // address:    r.types.object().keys({
  //   country:  r.types.string(),
  //   city:     r.types.string(),
  //   street:   r.types.string(),
  //   block:    r.types.string()
  // }).optional()
});

companySchema.hasMany('users', { refField: 'company' });

var userSchema = r.schema({
  company:    { type: r.types.string(), ref: 'Company' }
});


userSchema.before('save', function(record, done) {
  done();
});

userSchema.after('query', function(records, done) {
  done();
});

var User = r.model('User', userSchema);
var Company = r.model('Company', companySchema);

// create records
Company.create({ name: 'seedalpha', address: {} }, function(err, company) {
  User.create({
    username: 'john',
    password: '123456',
    company: company.id
  }, function(err, user) {
    Company.find({}, { populate: ['users'], limit: 1 }, function(err, result) {
      console.log(err, result[0].users);
    });
  });
});

// // search records
// User.find({ username: 'john' }, { limit: 1 }, function(err, user) {
//   // ...
// });